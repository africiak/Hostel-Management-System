<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABJ9JREFUWEfVl2mIW1UUx+OuKOIuat1q5r2btFbFDUQcFFdQXDDSad57mVFbRKnL
        B6lCcUOhiBUtKIqlXwriLoiituKuFEdLLXUr1LG1nUzyks6MILWObfz9b25KMk6mmcYI/uGQd+4992z3
        3HNvEv97VDKJfUZuSR9RSST2ckOTYiB38oHus3Vsykw7qBSZ6+PILIhD83Qx9N8oRv6qYmg2FyPzF+MV
        fn8sRqmL3JJ/ANm5rPlFsujYEEde4KYmRz7nn8LCjdB2Fq6NI/8daGkc+g/FOTMPxVcXQu9CfpdDOzCw
        JB/MOtgttyhEfh9r/4Duk5PIPUAQfxYj7yYn0hxEfj/Cw4XA7y2FqUtlED4jUhRyIu71zpVsHPjX4Nwg
        zq1H/gKrADD2k4w61oKMPc74asc2x1DkzcLzb+WxTZ/SHZoRMrKVsTJzA3YbQv9e1YHqge8XNYbMwsqD
        ib21lmivciotqkGY3xzbHlyKt0Gv1tKPE3NwYKwUmhsUANEutsIOjD1PMF8kqvtXTWkrhLEb88H0Y5we
        i/XzkwfIuLJTCsxlblhOPEmUKtQem5HQPMeWRsgus1mL/Iu1P6ttOqdAKL7N2UiUAzMTw2sYL8k5N2xR
        yKQPwelN0CIMX866T6A8jnw42YlpCdpvFN1NNNswviK+2T/eTTWgmPPvJMhB1YIbasRoaI4c6uuaPhlt
        DdMnOXGLwb7k0Rhd6Yzf1awJ4aCHDPtP4WbNcW64EezFrxLYHaGsW/JDs2cei9IB0rquHKVmWCXjUJl3
        9n44trDqoOmvrk+d5aYbsaXHO2qiqMdTLUocWY7itaVs8lCrYBxKQep8zVcd9x9Wq8aZsTjnZ4dzZxzm
        xPYcKP5Ze+/YXVDBYZg2TTcMzWvIxWpSmoOn9TZkc0RjxcDM1uTXeDhhtdcImWIp6jrPKqMVk9a39F1D
        IeddidxGFG+OQ+9ajbFFH2Bsib4VeSGXPlNHvipretD5uYgaUG+e+MzXU63BuL6/Iw5S14kXUERNmK/q
        t4Ux+r5fwolX+H4Xxz+FvuF7A/qGcWIndKsTnxpQtBjFBZ0G8WouGNteX5S2OVEDnPsXMPoU9BhrdJve
        rnooBOmkFURoKYtXtk7mCd3p/H4P/7pVAojqffgvm573ZiiE/nwWL2qdzFyt0w2IwbHavZ4PvFOJ9vc4
        MHeI/09A9h5RRdcalVJMZkYp2BOsQKdR6e7eF4P92hr1CfE4sQbHXnIi7WNkzumHY+AZq1gVTOeEd0fU
        7GTcnm1dNpLXQ0SnRMfNKmgXKHu2ati2ViqYZxgNhHqwx5MauiIOvEtU9W6JjuAy1n3k2PagdBLhZ4pQ
        T7IayXA9v4t4D1gHaExORXsoZdNppb8+3bslMqaXkFPx76IQJU8jK4NEuMI2m6zvW54+sEdv/qmAVjuN
        6AYw+LH9rxB2pfTCIer3Om5c1zbbQPcz/er51aeYP6TI5YwT6wwqmfT+pHwV9J0c0c1G1DHRv93xyAW1
        XyIfLffOOBGj5xB1GWfelGNOpLMg2kdx4gecuMf2+9C8rGeXm+48dHUS9Tqc2IIzC6Z84zVFIvE3AsaC
        XBJ1LtwAAAAASUVORK5CYII=
</value>
  </data>
</root>